// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/zllovesuki/b/app (interfaces: Backend,FastBackend)

// Package app is a generated GoMock package.
package app

import (
	context "context"
	io "io"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockBackend is a mock of Backend interface.
type MockBackend struct {
	ctrl     *gomock.Controller
	recorder *MockBackendMockRecorder
}

// MockBackendMockRecorder is the mock recorder for MockBackend.
type MockBackendMockRecorder struct {
	mock *MockBackend
}

// NewMockBackend creates a new mock instance.
func NewMockBackend(ctrl *gomock.Controller) *MockBackend {
	mock := &MockBackend{ctrl: ctrl}
	mock.recorder = &MockBackendMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBackend) EXPECT() *MockBackendMockRecorder {
	return m.recorder
}

// Retrieve mocks base method.
func (m *MockBackend) Retrieve(arg0 context.Context, arg1 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Retrieve", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Retrieve indicates an expected call of Retrieve.
func (mr *MockBackendMockRecorder) Retrieve(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Retrieve", reflect.TypeOf((*MockBackend)(nil).Retrieve), arg0, arg1)
}

// Save mocks base method.
func (m *MockBackend) Save(arg0 context.Context, arg1 string, arg2 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockBackendMockRecorder) Save(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockBackend)(nil).Save), arg0, arg1, arg2)
}

// SaveTTL mocks base method.
func (m *MockBackend) SaveTTL(arg0 context.Context, arg1 string, arg2 []byte, arg3 time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveTTL", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveTTL indicates an expected call of SaveTTL.
func (mr *MockBackendMockRecorder) SaveTTL(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTTL", reflect.TypeOf((*MockBackend)(nil).SaveTTL), arg0, arg1, arg2, arg3)
}

// MockFastBackend is a mock of FastBackend interface.
type MockFastBackend struct {
	ctrl     *gomock.Controller
	recorder *MockFastBackendMockRecorder
}

// MockFastBackendMockRecorder is the mock recorder for MockFastBackend.
type MockFastBackendMockRecorder struct {
	mock *MockFastBackend
}

// NewMockFastBackend creates a new mock instance.
func NewMockFastBackend(ctrl *gomock.Controller) *MockFastBackend {
	mock := &MockFastBackend{ctrl: ctrl}
	mock.recorder = &MockFastBackendMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFastBackend) EXPECT() *MockFastBackendMockRecorder {
	return m.recorder
}

// Retrieve mocks base method.
func (m *MockFastBackend) Retrieve(arg0 context.Context, arg1 string) (io.ReadCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Retrieve", arg0, arg1)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Retrieve indicates an expected call of Retrieve.
func (mr *MockFastBackendMockRecorder) Retrieve(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Retrieve", reflect.TypeOf((*MockFastBackend)(nil).Retrieve), arg0, arg1)
}

// Save mocks base method.
func (m *MockFastBackend) Save(arg0 context.Context, arg1 string) (io.WriteCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1)
	ret0, _ := ret[0].(io.WriteCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockFastBackendMockRecorder) Save(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockFastBackend)(nil).Save), arg0, arg1)
}

// SaveTTL mocks base method.
func (m *MockFastBackend) SaveTTL(arg0 context.Context, arg1 string, arg2 time.Duration) (io.WriteCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveTTL", arg0, arg1, arg2)
	ret0, _ := ret[0].(io.WriteCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveTTL indicates an expected call of SaveTTL.
func (mr *MockFastBackendMockRecorder) SaveTTL(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTTL", reflect.TypeOf((*MockFastBackend)(nil).SaveTTL), arg0, arg1, arg2)
}
